export ZSH=~/.oh-my-zsh

ZSH_THEME="sunrise"

plugins=(git gradle zsh-autosuggestions)

export PATH="/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games"

source $ZSH/oh-my-zsh.sh




# your project folder that we can `c [tab]` to
export PROJECTS=~/Code


# Stash your environment variables in ~/.localrc. This means they'll stay out
# of your main dotfiles repository (which may be public, like this one), but
# you'll have access to them in your scripts.
if [[ -a ~/.localrc ]]
then
  source ~/.localrc
fi

# all of our zsh files
typeset -U config_files
config_files=($HOME/.dotfiles/**/*.zsh)

# load the path files
for file in ${(M)config_files:#*/path.zsh}
do
  source $file
done

# load everything but the path and completion files
for file in ${${config_files:#*/path.zsh}:#*/completion.zsh}
do
  source $file
done

# initialize autocomplete here, otherwise functions won't be loaded
autoload -U compinit
compinit

# load every completion after autocomplete loads
for file in ${(M)config_files:#*/completion.zsh}
do
  source $file
done

unset config_files

# set dual monitors
dual () {
    xrandr --output HDMI1 --primary --left-of VGA1 --output VGA1 --auto
}

# set single monitor
single () {
    xrandr --output HDMI1 --off
}

[ -f ~/.fzf.zsh ] && source ~/.fzf.zsh

# Ignore duplicate entries
setopt HIST_IGNORE_ALL_DUPS

# Setting rg as the default source for fzf
export FZF_DEFAULT_COMMAND='rg --files --no-ignore --hidden --follow --glob "!.git/*" || true'

# To apply the command to CTRL-T as well
export FZF_CTRL_T_COMMAND="$FZF_DEFAULT_COMMAND"

. "$HOME/.asdf/asdf.sh"

alias vim=nvim
export EDITOR=nvim

alias "c=xclip"
alias "v=xclip -o"


alias "open=xdg-open"

# mergiraf requires glibc 2.39, which is not present everywhere
# this function builds a docker wrapper image and runs it
mergiraf24() {
  local image="mergiraf-runner:ubuntu24.04"

  if ! command -v docker >/dev/null 2>&1; then
    echo "Error: docker not found in PATH." >&2
    return 127
  fi

  # Build the image if it doesn't exist
  if ! docker image inspect "$image" >/dev/null 2>&1; then
    echo "Building $image..."
    docker build -t "$image" - <<'DOCKERFILE'
FROM ubuntu:24.04
RUN apt-get update && \
    apt-get install -y --no-install-recommends \
      libstdc++6 ca-certificates zlib1g libgcc-s1 && \
    rm -rf /var/lib/apt/lists/*
ENV PATH="/usr/local/bin:${PATH}"
WORKDIR /work
CMD ["bash"]
DOCKERFILE
    local rc=$?
    if [[ $rc -ne 0 ]]; then
      echo "Image build failed (exit $rc)." >&2
      return $rc
    fi
  fi

  # warn if mergigraf is not set up on the host
  if [[ ! -x "$HOME/bin/mergiraf" ]]; then
    echo "Warning: $HOME/bin/mergiraf not found or not executable." >&2
  fi

  local platform_arg=()
  [[ -n "$MERGIRAF_PLATFORM" ]] && platform_arg=(--platform="$MERGIRAF_PLATFORM")

  docker run --rm -it \
    -v "$PWD":/work -w /work \
    -v "$HOME/bin":/usr/local/bin \
    --user "$(id -u)":"$(id -g)" \
    "${platform_arg[@]}" \
    "$image" \
    mergiraf "$@"
}

# CTRL+Backspace: delete word
# Hint: run `showkey -a` to see what to bind.
# https://stackoverflow.com/questions/21252419/in-zsh-how-do-you-bind-ctrlbackspace-to-delete-the-previous-word
bindkey '^H' backward-kill-word
